{
    "contents" : "## makeCacheMatrix is meant to create a special matrix given an input of a matrix. \n#This special matrix should also cache the inverse of the given matrix.\n#Given that in the example the \"vector\" is actually a list of fuctions, the \"matrix\" will also be a list.\n\nmakeCacheMatrix <- function(x = matrix()) {\n  m <- NULL\n  setinv <- function(y) m <<- y\n  getinv <- function() m\n  list(get = get <- function() x,\n       setinv = setinv,\n       getinv = getinv)\n}\n\n#The second vector uses the previously identified functions to check if the matrix\n#has been solved. If yes, provides the inverse. If not, completes the computation.\n\ncacheSolve <- function(x, ...) {\n  m <- x$getinv()\n  if(!is.null(m)) {\n    message(\"retrieving data\")\n    return(m)\n  }\n  else {\n    message(\"Computing the inverse\")\n  data <- x$get()\n  m <- solve(data)\n  x$setinv(m)\n  m\n  }\n}",
    "created" : 1416252709682.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4099708928",
    "id" : "950E63DB",
    "lastKnownWriteTime" : 1416589805,
    "path" : "C:/Users/hallinan.s/ProgrammingAssignment2/cachematrix.R",
    "project_path" : "cachematrix.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}